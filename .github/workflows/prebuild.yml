name: Prebuild core & vite apps

on:
    issue_comment:
      types: [created]

jobs:
  build:
#      if: startsWith(github.head_ref, 'XSTREAM-')
      runs-on: ubuntu-latest
      steps:
          - name: Show GitHub context
            env:
              GITHUB_CONTEXT: ${{ toJson(github) }}
            run: echo "$GITHUB_CONTEXT"

          - name: Check for Specific Comment
            id: comment_check
            run: |
              LATEST_COMMENT=$(jq -r ".comment.body" $GITHUB_EVENT_PATH)
              if [[ "$GITHUB_EVENT_NAME" == "pull_request" || "$LATEST_COMMENT" == *"/build"* ]]; then
                echo "::set-output name=run_workflow::true"
              else
                echo "::set-output name=run_workflow::false"
              fi
            env:
              GITHUB_TOKEN: ${{ secrets.TOKEN }}
#
#          - name: Checkout repository
#            if: steps.comment_check.outputs.run_workflow == 'true'
#            uses: actions/checkout@v3



#            - name: Build Docker image
#              if: steps.comment_check.outputs.run_workflow == 'true'
#              run: docker build . -t prebuild -f ./docker/DOCKERFILES/build/prebuild.Dockerfile
#
#            - name: Run Docker container
#              if: steps.comment_check.outputs.run_workflow == 'true'
#              run: docker run --name prebuild prebuild
#
#            - name: Copy apps/core/dist
#              if: steps.comment_check.outputs.run_workflow == 'true'
#              run: docker cp prebuild:/app/apps/core/dist ./apps/core/dist
#
#            - name: Copy apps/core/applications
#              if: steps.comment_check.outputs.run_workflow == 'true'
#              run: docker cp prebuild:/app/apps/core/applications ./apps/core/applications
#
#            - name: Create an artifact for core/dist and core/applications
#              if: steps.comment_check.outputs.run_workflow == 'true'
#              uses: actions/upload-artifact@v3
#              with:
##                name: dist-artifact-${{ github.event.pull_request.head.sha }}
#                name: dist-artifact-${{ github.sha }}
#                path: |
#                    apps/core/dist
#                    apps/core/applications
#                retention-days: 30

